/*7-52 数组元素循环右移问题（20 分）
一个数组A中存有N（>0）个整数，
在不允许使用另外数组的前提下，将每个整数循环向右移M（≥0）个位置，
即将A中的数据由（最后M个数循环移至最前面的M个位置）。
如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

输入格式:
每个输入包含一个测试用例，第1行输入N（1≤N≤100）和M（≥0）；
第2行输入N个整数，之间用空格分隔。

输出格式:
在一行中输出循环右移M位以后的整数序列，之间用空格分隔，
序列结尾不能有多余空格。

输入样例:
6 2
1 2 3 4 5 6
输出样例:
5 6 1 2 3 4
*/

#include<stdio.h>
int main()
{
	int N;
	int M;
	int k=0;    //替换后数组的数的位置 
	int p=0;    //初始化平移后的前面几个数的位置 
	scanf("%d %d",&N,&M);
	if(M>N)
	{
		M -= N;
	 } 
	int a[N];
	int b[N];
	for(int i=0;i<N;i++)
	{
		scanf("%d",&a[i]);
	}
	for(int j=0;j<N;j++)
	{
		if((j+M)>(N-1))
		{
			b[p] = a[k];
			p++;
			k++;
		}
		else
		{
			b[j+M] = a[k];
			k ++;
		}
	}
	for(int q=0;q<N;q++)
	{
		if(q==(N-1))
		{
			printf("%d",b[q]);
		}
		else
		{
			printf("%d ",b[q]);
		}
	}
}
